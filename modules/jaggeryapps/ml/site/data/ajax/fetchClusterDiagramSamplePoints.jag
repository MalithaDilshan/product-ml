<%
    var log = new Log();
    var carbon = require('carbon');
    
    try{
        var mlDatasetService = carbon.server.osgiService('org.wso2.carbon.ml.dataset.DatasetService');
        var mlModelService = carbon.server.osgiService('org.wso2.carbon.ml.model.ModelService');
        
        var projectId = request.getParameter("projectId");
        var datasetId = mlDatasetService.getDatasetId(projectId);
        var datasetUrl = mlDatasetService.getDatasetUrl(datasetId);        

        var firstNumericalFeature = request.getParameter("numericalFeatureIndependent");
        var secondNumericalFeature = request.getParameter("numericalFeatureDependent");
        var noOfClusters = request.getParameter("noOfClusters");

        var ArrayList = java.util.ArrayList;
        var featuresList = new ArrayList();

        featuresList.add(firstNumericalFeature);
        featuresList.add(secondNumericalFeature);
        
        var samplePoints = mlModelService.getClusterPoints(datasetUrl, featuresList, noOfClusters);

        var clusterPoints = [];

        for (var i = 0; i < samplePoints.size(); i++) {
            var clusterPoint = [];
            clusterPoint[0] = samplePoints.get(i).getFeatures()[0];
            clusterPoint[1] = samplePoints.get(i).getFeatures()[1];
            clusterPoint[2] = samplePoints.get(i).getCluster();
            clusterPoints[i] = clusterPoint;
        }

        response.status = 200;
        response.contentType = "application/Json";
        response.content = clusterPoints;

    } catch(e) {
        var message = "An error occured while fetching sample points from dataset: " + datasetId;
        log.error(message);

        response.status = 500;
        response.contentType = 'application/Json';
        response.content = { status : message };
    }
%>