<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ML - Machine Learner</title>
    <link href="../../css/bootstrap.css" rel="stylesheet">
    <link href="../../css/custom.css" rel="stylesheet">
    <link href="../../css/custom-theme.css" rel="stylesheet">
    <script src="../../js/respond.min.js"></script> 

    <%
        include("../../includes/tenantAware.jag");
        print('<script> var authEncoded = "'+session.get("authEncoded")+'"; </script>')
    %>
    
</head>

<body>

<div class="container col-lg-12 col-md-12 col-sm-12">

<!-- header -->
<header>
<div class="row wr-global-header">
	<div class="col-sm-8 app-logo"><img src="../../images/logo.png" /><h2 class="app-title">Machine Learner</h2>
	</div>
	<div class="col-sm-4">
		<div class="wr-auth pull-right">
			<a href="#" data-toggle="dropdown" class="cu-ico-right-button cu-ico-button-user">Administrator</a>
			<div class="dropdown-menu">
				<div class="cu-arrow"></div>
				<div class="dropdown-menu-content">
					<a href="../logout/logout.jag" class="filter-item">Logout</a>
				</div>
			</div>			
		</div>
	</div>
</div>
</header>
<!-- /header -->

<!-- secondary header - app bar -->
<div id="nav" class="row wr-app-bar">
	<div class="col-md-9 wr-action-container">
		<div class="wr-project">
			<span class="title">PROJECT \ </span><span id="title"></span>
		</div>

		<div class="wr-action-btn-bar">
			<!--a href="#" class="cu-btn btn-add-new">Create Project</a>
			<a href="#" class="cu-btn btn-save">Save and Create</a-->
			<a href="../project/projects.jag" class="cu-btn btn-cancel">Cancel</a>
		</div>
	</div>

	<div class="col-md-3">
		<div class="wr-secondary-links pull-right">
			<!-- empty -->
			<a href="#" id="btn-prev" class="cu-btn btn-prev">Previous</a>
			<a href="#" id="btn-next" class="cu-btn-reverse btn-next">Next</a>
		</div>
	</div>
</div>
<!-- secondary header - app bar -->


<!-- content/body -->
<div class="row">
	<div class="col-lg-12 wr-secondary-bar">
		
		<!-- Wizard -->
	    <ul class="nav nav-pills nav-wizard">
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 1</span>Explore</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 2</span>Algorithms</a><div class="nav-arrow"></div></li>
            <li class="active"><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 3</span>Parameters</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 4</span>Model</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 5</span>Build</a><div class="nav-arrow"></div></li>
	    </ul>

		
	</div>
</div>


<div class="row">
	<div class="col-md-12">
		

		<!-- content -->
		<div class="container col-md-12 col-centered wr-content">

			<div class="wr-form col-lg-5 col-centered">

				<h1 class="title">Parameters</h1>

	            <label class="input-label">Set Hyper-Parameters for <span id="algo-cat"></span>\ <strong id="display-name"></strong> <span class="help-tip glyphicon glyphicon-question-sign"></span></label>
	            <div class="spcr-2"></div>

	            <div id="parameter-inputs">
					<!-- <label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>
					<div class="input-control text">
					    <input type="text" value="" placeholder="input text"/>
					</div>

					<label class="input-label">Responsive variable<span class="help-tip glyphicon glyphicon-question-sign"></span></label>
					<div class="input-control text">
					    <input type="text" value="" placeholder="input text"/> -->
					</div>
				</div>

			</div>

		</div>
		<!-- /content -->


	</div>
</div>
<!-- /content/body -->

</div>
    




<!--footer class="footer">
        <p>&copy; 2014 WSO2 Inc. All Rights Reserved</p>
</footer-->



<script src="https://code.jquery.com/jquery-latest.min.js"></script>
<script src="../../js/bootstrap.min.js"></script>
<script src="../../js/wso2.ml.util.js"></script>


<script type="text/javascript">

var serverUrl = window.location.origin;

var doubleRegEx = /^[+-]?\d+(\.\d+)?$/g;
var integerRegEx = /^\d+$/g;

$( document ).ready(function() {

	$('#nav').affix({
	      offset: {
	        top: $('header').height()
	      }
	});
	var algorithmName = getParameterByName('algorithmName');
    var analysisId = getParameterByName('analysisId');    
    var algorithmType = getParameterByName('algorithmType');

    $('#algo-cat').text(algorithmType);
    $('#display-name').text(algorithmName);

    var inputString;

    if (algorithmName == 'LINEAR_REGRESSION') {
	    inputString = '' +
	    			'<label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="iterations" value="100" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Learning rate<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="learning-rate" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">SGD data fraction<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="sgd-data-fraction" value="1" placeholder="input text"/>' +
					'</div>';
    }
    else if (algorithmName == 'RIDGE_REGRESSION' || algorithmName == 'LASSO_REGRESSION') {
	    inputString = '' +
	    			'<label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="iterations" value="100" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Learning rate<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="learning-rate" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Regularization parameter<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="reg-parameter" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">SGD data fraction<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="sgd-data-fraction" value="1" placeholder="input text"/>' +
					'</div>';
    }
    else if (algorithmName == 'LOGISTIC_REGRESSION') {
	    inputString = '' +
	    			'<label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="iterations" value="100" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Learning rate<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="learning-rate" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Regularization type<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="reg-type" value="L2" placeholder="input text"/>' +
					'</div>' +					
					'<label class="input-label">Regularization parameter<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="reg-parameter" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">SGD data fraction<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="sgd-data-fraction" value="1" placeholder="input text"/>' +
					'</div>';
    }
    else if (algorithmName == 'SVM') {
	    inputString = '' +
	    			'<label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="iterations" value="100" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Learning rate<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="learning-rate" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Regularization type<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="reg-type" value="L1" placeholder="input text"/>' +
					'</div>' +					
					'<label class="input-label">Regularization parameter<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="reg-parameter" value="0.001" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">SGD data fraction<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="sgd-data-fraction" value="1" placeholder="input text"/>' +
					'</div>';
    }
    else if (algorithmName == 'DECISION_TREE') {
	    inputString = '' +
	    			'<label class="input-label">Number of classes<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="num-classes" value="2" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Max depth<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="max-depth" value="5" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Max bins<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="max-bins" value="100" placeholder="input text"/>' +
					'</div>' +					
					'<label class="input-label">Impurity<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="impurity" value="gini" placeholder="input text"/>' +
					'</div>';
    }    
    else if (algorithmName == 'NAIVE_BAYES') {
	    inputString = '' +
	    			'<label class="input-label">Lambda<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="lambda" value="1" placeholder="input text"/>' +
					'</div>';
    }
    else if (algorithmName == 'K_MEANS') {
	    inputString = '' +
	    			'<label class="input-label">Iterations<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="iterations" value="20" placeholder="input text"/>' +
					'</div>' +
					'<label class="input-label">Number of clusters<span class="help-tip glyphicon glyphicon-question-sign"></span></label>' +
					'<div class="input-control text">' +
					    '<input type="text" id="num-clusters" value="3" placeholder="input text"/>' +
					'</div>';
    }

	$("#parameter-inputs").append(inputString);

    $('#btn-next').on('click', function(e){
    	e.preventDefault();
    	var algorithmName = getParameterByName('algorithmName');
    	var datasetId = getParameterByName('datasetId');

    	var jsonData;

	    if (algorithmName == 'LINEAR_REGRESSION') {
	    	var iterations = $('#iterations').val();
	    	var learningRate = $('#learning-rate').val();
	    	var sgdDataFraction = $('#sgd-data-fraction').val();

	    	jsonData = '[{ "key":"Iterations","value":"'+iterations+'"},{"key":"Learning_Rate","value":"'+learningRate+'"},{"key":"SGD_Data_Fraction","value":"'+sgdDataFraction+'"}]';
	    }
	    else if (algorithmName == 'RIDGE_REGRESSION' || algorithmName == 'LASSO_REGRESSION') {
	    	var iterations = $('#iterations').val();
	    	var learningRate = $('#learning-rate').val();
	    	var regParameter = $('#reg-parameter').val();
	    	var sgdDataFraction = $('#sgd-data-fraction').val();

	    	jsonData = '[{ "key":"Iterations","value":"'+iterations+'"},{"key":"Learning_Rate","value":"'+learningRate+'"},{"key":"Reg_Parameter","value":"'+regParameter+'"},{"key":"SGD_Data_Fraction","value":"'+sgdDataFraction+'"}]';
	    }
	    else if (algorithmName == 'LOGISTIC_REGRESSION' || algorithmName == 'SVM') {
	    	var iterations = $('#iterations').val();
	    	var learningRate = $('#learning-rate').val();
	    	var regType = $('#reg-type').val();
	    	var regParameter = $('#reg-parameter').val();
	    	var sgdDataFraction = $('#sgd-data-fraction').val();

	    	jsonData = '[{ "key":"Iterations","value":"'+iterations+'"},{"key":"Learning_Rate","value":"'+learningRate+'"},{"key":"Reg_Type","value":"'+regType+'"},{"key":"Reg_Parameter","value":"'+regParameter+'"},{"key":"SGD_Data_Fraction","value":"'+sgdDataFraction+'"}]';
	    }
	    else if (algorithmName == 'DECISION_TREE') {
	    	var numClasses = $('#num-classes').val();
	    	var maxDepth = $('#max-depth').val();
	    	var maxBins = $('#rmax-bins').val();
	    	var impurity = $('#impurity').val();

	    	jsonData = '[{ "key":"Num_Classes","value":"'+numClasses+'"},{"key":"Max_Depth","value":"'+maxDepth+'"},{"key":"Max_Bins","value":"'+maxBins+'"},{"key":"Impurity","value":"'+impurity+'"}]';
	    }    
	    else if (algorithmName == 'NAIVE_BAYES') {
	    	var lambda = $('#lambda').val();

	    	jsonData = '[{ "key":"Lambda","value":"'+lambda+'"}]';
	    }
	    else if (algorithmName == 'K_MEANS') {
	    	var iterations = $('#iterations').val();
	    	var numClusters = $('#num-clusters').val();

	    	jsonData = '[{ "key":"Iterations","value":"'+iterations+'"},{"key":"Num_Clusters","value":"'+numClusters+'"}]';
	    }

	    $.ajax({
            type: 'POST',
            url: serverUrl+"/api//analyses/"+analysisId+"/hyperParams",
            beforeSend : function(xhr) {
                xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
            },
            contentType: "application/json",
            data: jsonData,
            success: function(res){
                window.location.href = '../model/model.jag?analysisId='+analysisId+'&datasetId='+datasetId;
            },
            error: function(res){
                var crtValArea = btnArea.prev(".ctrl-validation-panel");
                if (crtValArea.length == 0) {
                    btnArea.before(buildNortifications(res.responseJSON.status));
                }
            }
        });        

    });	
    
/*    if ( algoCat === 'CATEGORICAL') { //TODO: move constants to a separate file
    	$('#algo-cat').text('Classification');    	
    } else {
    	$('#algo-cat').text('Numerical Prediction');
    }
    $('#title').text(projna);*/
    

	$.ajax({
        url: './ajax/GetParameters.jag',
        data: {algorithm: algo, wfid: wfid},
        success: function(res){
            var parameters = buildHyperparametersUI(res.parameters);                
            var responseVarSelector = buildResponseSelector(wfid, algoCat);
                
            $('#hyper-parameters').html(parameters + responseVarSelector);
            buildEvents('.hyper-double, .hyper-integer');                
        },
        error: function(res){
            var msg = '<span class="form-val-error">' + res.responseJSON.error + '<span>';
            $('#hyper-parameters').html(msg);
                
        }
    });

	$('#btn-build').on('click', function(e){

		$('.hyper-double').each(function(e){
            var value = $(this).val();
            if(!isValidDouble(value)){
            	showErrorMessage($(this).next('.form-val-error'),'* double is required');
            }
            
		});

		$('.hyper-integer').each(function(e) {
			var value = $(this).val();
			if(!isValidInteger(value)) {
			    showErrorMessage($(this).next('.form-val-error'),'* integer is required');	
			}
		});

	});

	 $('#btn-prev').on('click', function(e){
        e.preventDefault();
        window.location.href = '../algorithm/algorithm.jag?projid='+projid+'&projna='+projna+'&wfid='+wfid+'&wfname='+wfname;
    });
}); 

function isValidDouble(number){
    return number.match(doubleRegEx) != null;
}

function isValidInteger(number) {
	return number.match(integerRegEx) != null;
}

function showErrorMessage(element, message){
    $(element).text(message);
}

function buildEvents(element){
	$(element).on('keypress', function(e) {
        showErrorMessage($(this).next('.form-val-error'), '');
	});
}

function buildHyperparametersUI(parameters){
	
	// update algorith's display name
	var algoDisplayName = parameters.displayName;
    $('#display-name').text(algoDisplayName);
    
    var allHyperparameters = '';
    var hyperParameters = parameters.hyperParameters;
    for(var i=0; i < hyperParameters.length; i++){
    	if (typeof(hyperParameters[i].type) == 'object') {
    		allHyperparameters += buildDropdown(hyperParameters[i]);
    	} else {
    		allHyperparameters += buildInputbox(hyperParameters[i]); 
    	}
    }
    return allHyperparameters;     
}

function buildInputbox(parameter){
    
    var type = parameter.type;
    
    var label = buildLabel(parameter.name);
    
    var controller = '<div class="input-control text">' +
                     '<input class="hyper-'+type+'"'+'type="text" value="" placeholder="input text"/>'+
				     '<span class="form-val-error" id="file-upload-error"></span>' +
				     '</div>';
	return label + controller;
}

function buildDropdown(parameter){
	var label = buildLabel(parameter.name);
	var controller = '<div class="input-control text"> <select>'
	for(var i=0; i<parameter.type.length; i++){
        var type = parameter.type[i];
        controller += '<option value="'+type.name+'">'+type.name+'</option>';
	}
	controller += '</select></div>';
	
	return label+controller;
}

function buildLabel(label){	
	return '<label class="input-label">' + label + '<span class="help-tip glyphicon glyphicon-question-sign">'+
           '</span></label>';}

function buildResponseSelector(workflowId, algoCategory) {
	var controller = '<div class="input-control text"> <select>';
    var label = buildLabel('Response Variable');
	$.ajax({
        url: './ajax/GetFeatures.jag',
        data: {wfid: workflowId, algocat: algoCategory},
        async: false,
        success: function(res){
        	var features = res.features;        	
        	for (var i=0; i<features.length; i++) {
        		controller += '<option value="' + features[i]+'">' + features[i] + '</option>';
        	}
        	controller += '</select></div>';        	
        },
        error: function(res){ //TODO: error handling...
        	console.log(res);
        }
	});

	return label + controller;
}

</script>

</body>
</html>
