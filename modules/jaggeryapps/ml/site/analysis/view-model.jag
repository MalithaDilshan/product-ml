<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ML - Machine Learner</title>
    <link href="../../css/bootstrap.css" rel="stylesheet">
    <link href="../../css/custom.css" rel="stylesheet">
    <link href="../../css/jquery.dataTables.min.css" rel="stylesheet">
    <link href="../../css/custom-theme.css" rel="stylesheet">

    <link rel="stylesheet" type="text/css" href="../../css/d3.parsets.css">
    <link rel="stylesheet" type="text/css" href="../../css/data.css">
    <link rel="stylesheet" type="text/css" href="../../css/wso2.ml.graphs.css">
    <link rel="stylesheet" type="text/css" href="../../css/nv.d3.min.css">

    <script src="../../js/respond.min.js"></script>  
    <script src="../../js/d3.v3.min.js"></script>
    <script src="../../js/d3.js"></script>
    <script src="../../js/nv.d3.js"></script>
    <script src="../../js/wso2.ml.graphs.js"></script>
    
    <script src="https://code.jquery.com/jquery-latest.min.js"></script>    

    <%
        include("../../includes/tenantAware.jag");
        print('<script> var authEncoded = "'+session.get("authEncoded")+'"; </script>');
    %> 

</head>

<body>

<div class="container col-lg-12 col-md-12 col-sm-12">

<!-- header -->
<header>
<div class="row wr-global-header">
	<div class="col-sm-8 app-logo"><img src="../../images/logo.png" /><h2 class="app-title">Machine Learner</h2>
	</div>
	<div class="col-sm-4">
		<div class="wr-auth pull-right">
			<a href="#" data-toggle="dropdown" class="cu-ico-right-button cu-ico-button-user"><% print(session.get("logged.user")); %></a>
			<div class="dropdown-menu">
				<div class="cu-arrow"></div>
				<div class="dropdown-menu-content">
					<a href="../logout/logout.jag" id="log-out" class="filter-item">Logout</a>
				</div>
			</div>			
		</div>
	</div>
</div>
</header>
<!-- /header -->

<!-- secondary header - app bar -->
<div id="nav" class="row wr-app-bar">
	<div class="col-md-9 wr-action-container">
		<div class="wr-asset-type-switcher">
	        <a href="#" class="ctrl-asset-type-switcher" data-placement="bottom" data-trigger="focus">
	        <span class="btn-asset"></span>
	        </a>
        </div>
        <div class="wr-project">
            <span class="title">PROJECTS \ </span><span id="nav-project"></span><span id="nav-analysis"></span><span id="nav-model"></span>
        </div>

		<div class="wr-action-btn-bar">
			<a href="../project/projects.jag" class="cu-btn btn-prev" id="back-link">Back</a>
		</div>
	</div>

	<div class="col-md-3">
		<div class="wr-secondary-links pull-right">
			<!-- <a href="#" class="cu-btn btn-prev" id="prev-btn">Previous</a> -->
			<!-- <a href="#" id="next-btn" class="cu-btn-reverse btn-next">Next</a> -->
		</div>
	</div>
</div>
<!-- secondary header - app bar -->


<!-- content/body -->
<div class="row">
	<div class="col-lg-12 wr-secondary-bar"></div>
</div>
<div class="row">
	<div class="col-md-12">
		

		<!-- content -->
		<div class="container col-md-12 col-centered wr-content">

			<h1 class="title">Model Summery</h1>
			
			<div class="col-md-6">
                <h4 class="title">ROC Graph</h4>
                <div id="rocGraph"></div>         
            </div>
            <div class="col-md-6" id="weights-chart">
                <h4 class="title">Feature Importance</h4>
                <svg></svg>
            </div>

		</div>
		<!-- /content -->


	</div>
</div>
<!-- /content/body -->

</div>
    


<!--footer class="footer">
        <p>&copy; 2014 WSO2 Inc. All Rights Reserved</p>
</footer-->

<div id="content-asset-types" style="display: none">
    <div>
        <a class="ast-type-item" href="../project/projects.jag"><img src="../../images/icons/ico-projects.png" /><span>Projects</span></a>
        <a class="ast-type-item" href="../data/datasets.jag"><img src="../../images/icons/ico-datasets.png" /><span>Datasets</span></a>   
    </div>
</div>

<script src="../../js/d3.v3.min.js" charset="utf-8"></script>
<script src="../../js/wso2.ml.util.js"></script>
<script src="../../js/bootstrap.min.js"></script>
<script src="../../js/jquery.dataTables.js"></script>
    
<script src="../../js/d3.parsets.js"></script>
<script src="../../js/figue.js"></script>

<script type="text/javascript">

var serverUrl = window.location.origin;
var datasetId = getParameterByName('datasetId');
var projectName = getParameterByName('projectName');
var analysisName = getParameterByName('analysisName');
var modelName = getParameterByName('modelName');
var modelId = getParameterByName('modelId');
var analysisId;
var tenantId;
var userName;

// redraw charts upon changes in selections
$(document).on('change','select[class="numFeaturesIndependentDropdown"], select[class="numFeaturesDependentDropdown"], select[class="catFeaturesDropdown"]',function() {
    drawPlotsAjax();
});
$(document).on('change','input[class="categoricalFeatureNames"]',function() {
	$("#parallelSets").html("Loading chart...");
	drawParallelSets();
});
$(document).on('change','input[class="numericalFeatureNames"], select[id="categoricalFeature"]',function() {
    $("#trellisChart").html("Loading chart...");
    drawTrellisChart();
});
$(document).on('change','select[class="numericalFeatureIndependent"], select[class="numericalFeatureDependent"], select[class="noOfClusters"]',function() {
    $("#clusterDiagram").html("Loading chart...");
    drawClusterDiagram();
});

$( document ).ready(function() {

	$('#nav').affix({
	      offset: {
	        top: $('header').height()
	      }
	});

    $("[data-toggle=popover]").popover();

    $(".ctrl-asset-type-switcher").popover({
        html : true, 
        content: function() {
            return $('#content-asset-types').html();
        }
    });	

    // set commonly used variables
    var analysisName = getParameterByName('analysisName');    
    $.ajax({
        type: 'GET',
        url: serverUrl+"/api/analyses/"+analysisName,        
        async : false,
        beforeSend : function(xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
        },
        success: function(res){
            analysisId = res['id'];
            tenantId = res['tenantId'];
            userName = res['userName'];            
        },
        error: function(res){
            var crtValArea = btnArea.prev(".ctrl-validation-panel");
            if (crtValArea.length == 0) {
                btnArea.before(buildNortifications(res.responseJSON.status));
            }
        }
    });

    // put path in application navigator
    $('#nav-project').text(projectName);
    $('#nav-analysis').text(" \\ "+analysisName);
    $('#nav-model').text(" \\ "+modelName);

    // get model summery and draw plots    
    $.ajax({
        type: 'GET',
        url: serverUrl+"/api/models/"+modelId+"/summary",
        beforeSend : function(xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
        },
        success: function(res){          
            console.log(res['algorithm']);
            if (res['algorithm'] == 'LOGISTIC_REGRESSION' || res['algorithm'] == 'SVM' ) {
                // format data and draw ROC graph
                var rocData  = JSON.parse(res['roc']);
                drawRocGraph(rocData, "#rocGraph");
                // create data object and draw weights chart
                var featureImportanceData = [ {'key':'featureImportanceData', 'values': res['featureImportance']}];
                drawWeightsChart(featureImportanceData);                                
            }
            else if (res['algorithm'] == 'LINEAR_REGRESSION' || res['algorithm'] == 'RIDGE_REGRESSION' || res['algorithm'] == 'LASSO_REGRESSION' || res['algorithm'] == 'DECISION_TREE' || res['algorithm'] == 'NAIVE_BAYES') {
                // remove ROC graph div
                $( "#rocGraph" ).closest("div.col-md-6").remove();
                // create data object and draw weights chart
                var featureImportanceData = [ {'key':'featureImportanceData', 'values': res['featureImportance']}];
                drawWeightsChart(featureImportanceData);
            }
            else {
                // TODO: add cluster diagram
                console.log("K-means");
            }

        },
        error: function(res){
            var crtValArea = btnArea.prev(".ctrl-validation-panel");
            if (crtValArea.length == 0) {
                btnArea.before(buildNortifications(res.responseJSON.status));
            }
        }
    });

    $('#back-link').on('click', function(e){
        e.preventDefault();
        window.location.href = 'analysis.jag?analysisId='+analysisId+'&datasetId='+datasetId+'&projectName='+projectName+'&analysisName='+analysisName;
    });   
	
});

// function to draw ROC graph
function drawRocGraph (data, cssClass) {
    var rocGraph = new ROCGraph(data);
    rocGraph.setXAxisText("False positive rate");
    rocGraph.setYAxisText("True positive rate");
    rocGraph.setLegendName("roc curve (area=0.91)");
    rocGraph.setLineWidth(2);
    rocGraph.setPlotingAreaWidth(600);
    rocGraph.setPlotingAreaHeight(400);
    rocGraph.setLineColor("#A366A3"); 
    rocGraph.plot(d3.select(cssClass),function(){
	   	var xLoc = xScale.invert(d3.mouse(this)[0]);
        var yLoc = yScale.invert(d3.mouse(this)[1]);
    });
};

// function to draw weights chart
function drawWeightsChart (data) {

    nv.addGraph(function() {
        var chart = nv.models.discreteBarChart()
                        .x(function(d) { return d.label })
                        .y(function(d) { return d.value })
                        .staggerLabels(false)
                        .tooltips(false)
                        .showValues(false)
                        .color(["#D1B2D1", "#A366A3", "#751975"]);

        chart.yAxis.tickFormat(d3.format(".2e"));

        chart.xAxis.axisLabel('Features')

        d3.select('#weights-chart svg')
            .datum(data)
            .call(chart);

        nv.utils.windowResize(chart.update);
        return chart;
    });
}

</script>

</body>
</html>